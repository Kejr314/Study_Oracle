SHOW USER;

-------------------------------------------------------------------------
CREATE TABLE JOB(
    JOB_CODE CHAR(2) NOT NULL,
    JOB_NAME VARCHAR2(35)
);

COMMENT ON COLUMN JOB.JOB_CODE IS '직급코드';
COMMENT ON COLUMN JOB.JOB_NAME IS '직급명';

-------------------------------------------------------------------------
CREATE TABLE DEPARTMENT(
    DEPT_ID CHAR(2) NOT NULL,
    DEPT_TITLE VARCHAR2(35),
    LOCATION_ID CHAR(2) NOT NULL
);

COMMENT ON COLUMN DEPARTMENT.DEPT_ID IS '부서코드';
COMMENT ON COLUMN DEPARTMENT.DEPT_TITLE IS '부서명';
COMMENT ON COLUMN DEPARTMENT.LOCATION_ID IS '지역코드';

SELECT * FROM DEPARTMENT;

-------------------------------------------------------------------------
CREATE TABLE EMPLOYEE(
    EMP_ID VARCHAR2(3) NOT NULL,
    EMP_NAME VARCHAR2(20) NOT NULL,
    EMP_NO CHAR(14) NOT NULL,
    EMAIL VARCHAR2(25),
    PHONE VARCHAR2(12),
    DEPT_CODE CHAR(2),
    JOB_CODE CHAR(2) NOT NULL,
    SAL_LEVEL CHAR(2) NOT NULL,
    SALARY NUMBER,
    BONUS NUMBER,
    MANAGER_ID VARCHAR2(3),
    HIRE_DATE DATE,
    ENT_DATE DATE,
    ENT_YN CHAR(1) DEFAULT 'N'
);

COMMENT ON COLUMN EMPLOYEE.EMP_ID IS '사원번호';
COMMENT ON COLUMN EMPLOYEE.EMP_NAME IS '직원명';
COMMENT ON COLUMN EMPLOYEE.EMP_NO IS '주민등록번호';
COMMENT ON COLUMN EMPLOYEE.EMAIL IS '이메일';
COMMENT ON COLUMN EMPLOYEE.PHONE IS '전화번호';
COMMENT ON COLUMN EMPLOYEE.DEPT_CODE IS '부서코드';
COMMENT ON COLUMN EMPLOYEE.JOB_CODE IS '직급코드';
COMMENT ON COLUMN EMPLOYEE.SAL_LEVEL IS '급여등급';
COMMENT ON COLUMN EMPLOYEE.SALARY IS '급여';
COMMENT ON COLUMN EMPLOYEE.BONUS IS '보너스율';
COMMENT ON COLUMN EMPLOYEE.MANAGER_ID IS '관리자사번';
COMMENT ON COLUMN EMPLOYEE.HIRE_DATE IS '입사일';
COMMENT ON COLUMN EMPLOYEE.ENT_DATE IS '퇴사일';
COMMENT ON COLUMN EMPLOYEE.ENT_YN IS '퇴직여부';

-- 200, 선동일, 621231-1986634, sun-di@kh.or.kr, 01099546325, D9, J1, S1, 8000000, 0.3, X, 2013/02/06, X, N

INSERT INTO EMPLOYEE
VALUES('200', '선동일', '621231-1986634', 'sun-di@kh.or.kr', '01099546325', 'D9', 'J1', 'S1', 8000000, 0.3, null, '2013/02/06', null, DEFAULT);

SELECT * FROM EMPLOYEE WHERE EXP_ID = '200';

-- kh violet
-- ALTER (오라클 객체)
-- ALTER을 이용한 제약 조건 추가 수정 이름 변경
-- ALTER를 이용한 컬럼 추가, 컬럼 데이터 타입 수정, 컬럼명 수정, 컬럼 삭제, 테이블명 수정

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'EMPLOYEE';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'DEPARTMENT';
-- ** CONSTRAINT TYPE
-- P : PRIMARY KEY
-- R(F) : FOREIGN KEY
-- C : CHECK OR NOT NULL
-- U : UNIQUE
-- SYS 자동 생성 : 이름을 부여하지 않은 


-- 3) USER_GRADE 테이블 생성
CREATE TABLE USER_GRADE(
    GRADE_CODE NUMBER,
    GRADE_NAME VARCHAR2(30)
);
-- 2) USER_GRADE 테이블 삭제
DROP TABLE USER_GRADE;

INSERT INTO USER_GRADE VALUES(10, '일반회원');
INSERT INTO USER_GRADE VALUES(20, '우수회원');
INSERT INTO USER_GRADE VALUES(30, '특별회원');
INSERT INTO USER_GRADE VALUES(40, 'VIP회원');

SELECT * FROM USER_GRADE;

-- 4) USER_FOREIGN_KEY 테이블 생성
CREATE TABLE USER_FOREIGN_KEY(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PWD VARCHAR2(30),
    USER_NAME VARCHAR2(30),
    USER_GENDER VARCHAR2(10),
    USER_PHONE VARCHAR2(30),
    USER_EMAIL VARCHAR2(50),
    USER_DATE DATE DEFAULT SYSDATE,
    GRADE_CODE NUMBER 
);

-- 1) USER_FOREIGN_KEY 테이블 삭제
DROP TABLE USER_FOREIGN_KEY;

INSERT INTO USER_FOREIGN_KEY
VALUES(1, 'khuser01', 'pass01', '일용자', 'M', null, null, DEFAULT, 10);
INSERT INTO USER_FOREIGN_KEY
VALUES(2, 'khuser02', 'pass02', '이용자', 'M', null, null, DEFAULT, 20);
INSERT INTO USER_FOREIGN_KEY
VALUES(3, 'khuser03', 'pass03', '삼용자', 'M', null, null, DEFAULT, 30);
INSERT INTO USER_FOREIGN_KEY
VALUES(4, 'khuser04', 'pass04', '사용자', 'M', null, null, DEFAULT, 40);

SELECT * FROM USER_FOREIGN_KEY;

-- 5) ALTER 명령어로 제약 조건 추가
DESC USER_GRADE;
--1. 테이블의 컬럼 추가
ALTER TABLE USER_GRADE
ADD GRADE_DATE DATE;
--2. 테이블의 컬럼 삭제
ALTER TABLE USER_GRADE
DROP COLUMN GRADE_DATE;
DESC USER_GRADE;
--3. 테이블의 컬럼 데이터 타입 수정
ALTER TABLE USER_GRADE
MODIFY GRADE_NAME CHAR(12);
--4. 테이블의 컬럼명 수정
ALTER TABLE USER_GRADE
RENAME COLUMN GRADE_DATE TO REG_DATE; -- GRADE_DATE -> REG_DATE
--5. 테이블명 수정
ALTER TABLE USER_GRADE
RENAME TO GRAND_TBL;
SELECT * FROM GRAND_TBL; -- USER_GRADE -> GRAND_TBL

RENAME GRAND_TBL TO USER_GRADE;
SELECT * FROM USER_GRADE;

--이름         널? 유형           
------------ -- ------------ 
--GRADE_CODE    NUMBER       
--GRADE_NAME    VARCHAR2(30) 

--Table USER_GRADE이(가) 변경되었습니다.
--
--이름         널? 유형           
------------ -- ------------ 
--GRADE_CODE    NUMBER       
--GRADE_NAME    VARCHAR2(30) 
--GRADE_DATE    DATE     
--
--Table USER_GRADE이(가) 변경되었습니다.
--
--이름         널? 유형           
------------ -- ------------ 
--GRADE_CODE    NUMBER       
--GRADE_NAME    VARCHAR2(30) 
--
--Table USER_GRADE이(가) 변경되었습니다.
--
--이름         널? 유형       
------------ -- -------- 
--GRADE_CODE    NUMBER   
--GRADE_NAME    CHAR(12) 
--
--Table USER_GRADE이(가) 변경되었습니다.
--
--이름         널? 유형       
------------ -- -------- 
--GRADE_CODE    NUMBER   
--GRADE_NAME    CHAR(12) 
--GRADE_DATE    DATE
--
--Table USER_GRADE이(가) 변경되었습니다.
-- 
--이름         널? 유형       
------------ -- -------- 
--GRADE_CODE    NUMBER   
--GRADE_NAME    CHAR(12) 
--REG_DATE      DATE    
--
--Table USER_GRADE이(가) 변경되었습니다.
--
--SELECT * FROM GRADE_TBL;
--
--테이블 이름이 변경되었습니다.
--
--SELECT * FROM USER_GRADE;

-------------------------------------------------------------------------------
-- 제약조건과 ALTER
-- 1. 제약조건 추가
ALTER TABLE USER_GRADE
ADD CONSTRAINT PK_GRADE_CODE PRIMARY KEY(GRADE_CODE);

ALTER TABLE USER_FOREIGN_KEY
ADD CONSTRAINT FK_GRADE_CODE FOREIGN KEY(GRADE_CODE) REFERENCES USER_GRADE(GRADE_CODE);

-- 2. 제약조건 삭제
ALTER TABLE USER_GRADE
DROP CONSTRAINT PK_GRADE_CODE;
-- 3. 제약조건 수정

DROP TABLE USER_GRADE;

-- ex1) USER_FOREIGN_KEY 테이블에 USER_DATE DATE 컬럼 추가
ALTER TABLE USER_FOREIGN_KEY
ADD USER_DATE DATE;
DESC USER_FOREIGN_KEY;
-- ex2) USER_FOREIGN_KEY 테이블에 USER_DATE DATE 컬럼 삭제
ALTER TABLE USER_FOREIGN_KEY
DROP COLUMN USER_DATE;
DESC USER_FOREIGN_KEY;
-- ex3) USER_FOREIGN_KEY 테이블에 USER_DATE 컬럼의 자료형을 VARCHAR2(10)으로 변경
ALTER TABLE USER_FOREIGN_KEY
MODIFY USER_DATE VARCHAR2(10);
DESC USER_FOREIGN_KEY;
-- ex4) USER_FOREIGN_KEY 테이블에 USER_DATE DATE 컬럼명을 REG_DATE로 변경
ALTER TABLE USER_FOREIGN_KEY
RENAME COLUMN USER_DATE TO REG_DATE;
DESC USER_FOREIGN_KEY;
-- ex5) USER_FOREIGN_KEY 테이블명 USER_TBL로 변경(2가지)
ALTER TABLE USER_FOREIGN_KEY
RENAME TO USER_TBL;
SELECT * FROM USER_TBL;
-- USER_TBL -> USER_FOREIGN_KEY
ALTER TABLE USER_TBL
RENAME TO USER_FOREIGN_KEY;
SELECT * FROM USER_FOREIGN_KEY;













